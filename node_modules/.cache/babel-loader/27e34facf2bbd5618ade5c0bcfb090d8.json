{"ast":null,"code":"var _jsxFileName = \"/Users/adaada/Documents/Frontend/purple-react-free/src/app/products/AddProduct.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap'; // import { Editor } from \"@tinymce/tinymce-react\";\n\nimport { Link } from 'react-router-dom';\n\nconst AddProduct = () => {\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [emailDirty, setEmailDirty] = useState(false);\n  // const [passwordDirty, setPasswordDirty] = useState(false);\n  // const [emailError, setEmailError] = useState('Email is empty');\n  // const [passwordError, setPasswordError] = useState('Password is empty');\n  // const [formValid, setFormValid] = useState(false);\n  // useEffect(() => {\n  //     if (emailError || passwordError) {\n  //         setFormValid(false);\n  //         console.log(\"Form not validate. email: \" + email + \", password: \" + password);\n  //     } else {\n  //         setFormValid(true);\n  //         alert(\"you validate\");\n  //         console.log(\"form validate, email: \" + email + \", password: \" + password);\n  //     }\n  // }, [emailError, passwordError]);\n  // const emailHandler = (e) => {\n  //     setEmail(e.target.value)\n  //     let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  //     if (re.test(email)) {\n  //         setEmailError(\"nor right email\")\n  //     }\n  //     else if (e.target.value.length === 0) {\n  //         setEmailError(\"email is empty\")\n  //     } else {\n  //         setEmailError(\"\")\n  //     }\n  // };\n  // const passwordHandler = (e) => {\n  //     setPassword(e.target.value)\n  //     if (e.target.value.length < 8) {\n  //         setPasswordError(\"there password need to have more than 8 symbols\")\n  //     } else if (e.target.value.length === 0) {\n  //         setPasswordError(\"Password is empty\")\n  //     }\n  //     else {\n  //         setPasswordError(\"\")\n  //     }\n  // };\n  // const blurHandler = (e) => {\n  //     switch (e.target.name) {\n  //         case \"email\":\n  //             setEmailDirty(true)\n  //             break;\n  //         case \"password\":\n  //             setPasswordDirty(true)\n  //             break;\n  //     }\n  // }\n  // render() {\n  const categories_list = () => {\n    let categories = [];\n\n    for (let i = 0; i < 6; i++) {\n      categories.push(React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Category \", i + 1));\n    }\n\n    return categories;\n  };\n\n  const type_list = () => {\n    let types = [];\n\n    for (let i = 0; i < 6; i++) {\n      types.push(React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Type \", i + 1));\n    }\n\n    return types;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    class: \" card \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \" card-body row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"   \", React.createElement(Link, {\n    to: \"/all-product\",\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Products\"), \" / Add new product\"))), React.createElement(\"div\", {\n    className: \"card mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-sample\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Product Name\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Company id\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    // disabled={!formValid}\n    type: \"button\",\n    className: \"btn btn-gradient-primary btn-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Create Product\")))))));\n}; // }\n\n\nexport default AddProduct;","map":{"version":3,"sources":["/Users/adaada/Documents/Frontend/purple-react-free/src/app/products/AddProduct.js"],"names":["React","Component","useState","useEffect","Form","Link","AddProduct","categories_list","categories","i","push","type_list","types"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\n// import { Editor } from \"@tinymce/tinymce-react\";\nimport { Link } from 'react-router-dom';\n\n\nconst AddProduct = () => {\n\n    // const [email, setEmail] = useState('');\n    // const [password, setPassword] = useState('');\n\n    // const [emailDirty, setEmailDirty] = useState(false);\n    // const [passwordDirty, setPasswordDirty] = useState(false);\n\n    // const [emailError, setEmailError] = useState('Email is empty');\n    // const [passwordError, setPasswordError] = useState('Password is empty');\n\n    // const [formValid, setFormValid] = useState(false);\n\n\n    // useEffect(() => {\n    //     if (emailError || passwordError) {\n    //         setFormValid(false);\n    //         console.log(\"Form not validate. email: \" + email + \", password: \" + password);\n\n    //     } else {\n    //         setFormValid(true);\n    //         alert(\"you validate\");\n    //         console.log(\"form validate, email: \" + email + \", password: \" + password);\n    //     }\n    // }, [emailError, passwordError]);\n\n\n    // const emailHandler = (e) => {\n    //     setEmail(e.target.value)\n    //     let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    //     if (re.test(email)) {\n    //         setEmailError(\"nor right email\")\n    //     }\n    //     else if (e.target.value.length === 0) {\n    //         setEmailError(\"email is empty\")\n    //     } else {\n    //         setEmailError(\"\")\n    //     }\n    // };\n\n    // const passwordHandler = (e) => {\n    //     setPassword(e.target.value)\n    //     if (e.target.value.length < 8) {\n    //         setPasswordError(\"there password need to have more than 8 symbols\")\n\n    //     } else if (e.target.value.length === 0) {\n    //         setPasswordError(\"Password is empty\")\n\n    //     }\n    //     else {\n    //         setPasswordError(\"\")\n    //     }\n    // };\n\n    // const blurHandler = (e) => {\n    //     switch (e.target.name) {\n    //         case \"email\":\n    //             setEmailDirty(true)\n    //             break;\n    //         case \"password\":\n    //             setPasswordDirty(true)\n    //             break;\n    //     }\n    // }\n\n\n    // render() {\n    const categories_list = () => {\n        let categories = []\n        for (let i = 0; i < 6; i++) {\n            categories.push(\n                <option>Category {i + 1}</option>\n            )\n        }\n        return categories;\n\n    }\n\n    const type_list = () => {\n        let types = []\n        for (let i = 0; i < 6; i++) {\n            types.push(\n                <option>Type {i + 1}</option>\n            )\n        }\n        return types;\n\n    }\n\n    return (\n        <>\n            <div class=\" card \">\n                <div class=\" card-body row\">\n                    <p>   <Link to=\"/all-product\" class=\"text-muted\">Products</Link> / Add new product</p>\n                </div>\n            </div>\n\n            <div className=\"card mt-3\">\n                <div className=\"card-body\">\n                    <form className=\"form-sample\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Product Name</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"text\"\n                                        />\n                                    </div>\n                                </Form.Group>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Company id</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"number\" />\n                                    </div>\n                                </Form.Group>\n                            </div>\n                        </div>\n\n                        {/* <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Category</label>\n                                    <div className=\"col-sm-9\">\n                                        <select className=\"form-control\">\n                                            {categories_list()}\n                                        </select>\n                                    </div>\n                                </Form.Group>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Type</label>\n                                    <div className=\"col-sm-9\">\n                                        <select className=\"form-control\">\n                                            {type_list()}\n                                        </select>\n                                    </div>\n                                </Form.Group>\n                            </div>\n                        </div> */}\n\n                        {/* <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Amount</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control\n                                            type=\"number\"\n                                        />\n                                    </div>\n                                </Form.Group>\n                            </div>\n                        </div> */}\n                        \n                        {/* <p className=\"mt-2\">Description</p>\n                            <Editor\n                                value={this.state.content}\n                                init={{\n                                    height: 400,\n                                    menubar: false,\n                                    branding: false \n                                }} \n                                onEditorChange={this.handleChange}\n                            /> */}\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <button\n                                    // disabled={!formValid}\n                                    type=\"button\" className=\"btn btn-gradient-primary btn-lg\">Create Product</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n        </>\n\n    )\n}\n// }\n\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}