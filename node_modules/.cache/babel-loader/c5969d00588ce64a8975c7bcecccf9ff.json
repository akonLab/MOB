{"ast":null,"code":"import _slicedToArray from \"/Users/adaada/Documents/Frontend/purple-react-free/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adaada/Documents/Frontend/purple-react-free/src/app/login/Login.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\n\nconst Login = () => {\n  // render() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        emailDirty = _useState6[0],\n        setEmailDirty = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        passwordDirty = _useState8[0],\n        setPasswordDirty = _useState8[1];\n\n  const _useState9 = useState('Email is empty'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        emailError = _useState10[0],\n        setEmailError = _useState10[1];\n\n  const _useState11 = useState('Password is empty'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        passwordError = _useState12[0],\n        setPasswordError = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        formValid = _useState14[0],\n        setFormValid = _useState14[1];\n\n  useEffect(() => {\n    if (emailError || passwordError) {\n      setFormValid(false);\n      console.log(\"Form not validate. email: \" + email + \", password: \" + password);\n    } else {\n      setFormValid(true);\n      alert(\"you validate\");\n      console.log(\"form validate, email: \" + email + \", password: \" + password);\n    }\n  }, [emailError, passwordError]);\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (re.test(email)) {\n      setEmailError(\"nor right email\");\n    } else if (e.target.value.length === 0) {\n      setEmailError(\"email is empty\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n\n    if (e.target.value.length < 8) {\n      setPasswordError(\"there password need to have more than 8 symbols\");\n    } else if (e.target.value.length === 0) {\n      setPasswordError(\"Password is empty\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case \"email\":\n        setEmailDirty(true);\n        break;\n\n      case \"password\":\n        setPasswordDirty(true);\n        break;\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"d-flex align-items-center auth px-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row w-100 mx-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-5 mx-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"auth-form-light text-left py-5 px-4 px-sm-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Hello! let's get started\"), React.createElement(\"h6\", {\n    className: \"font-weight-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Sign in to continue.\"), React.createElement(Form, {\n    className: \"pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"d-flex search-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"email\",\n    value: email,\n    onChange: e => emailHandler(e),\n    onBlur: e => blurHandler(e),\n    placeholder: \"Email\",\n    size: \"lg\",\n    className: \"h-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    className: \"d-flex search-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"password\",\n    value: password,\n    onChange: e => passwordHandler(e),\n    onBlur: e => blurHandler(e),\n    placeholder: \"Password\",\n    size: \"lg\",\n    className: \"h-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"SIGN IN\")), React.createElement(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-facebook auth-form-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"mdi mdi-facebook mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), \"Connect using facebook\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-google auth-form-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"mdi mdi-google mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), \"Connect using google\"))))))));\n}; // }\n\n\nexport default Login;","map":{"version":3,"sources":["/Users/adaada/Documents/Frontend/purple-react-free/src/app/login/Login.js"],"names":["React","Component","useState","useEffect","Link","Form","Login","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","console","log","alert","emailHandler","e","target","value","re","test","length","passwordHandler","blurHandler","name"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\n\nconst Login = () => {\n  // render() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n\n  const [emailError, setEmailError] = useState('Email is empty');\n  const [passwordError, setPasswordError] = useState('Password is empty');\n\n  const [formValid, setFormValid] = useState(false);\n\n\n  useEffect(() => {\n    if (emailError || passwordError) {\n      setFormValid(false);\n      console.log(\"Form not validate. email: \" + email + \", password: \" + password);\n\n    } else {\n      setFormValid(true);\n      alert(\"you validate\");\n      console.log(\"form validate, email: \" + email + \", password: \" + password);\n    }\n  }, [emailError, passwordError]);\n\n\n  const emailHandler = (e) => {\n    setEmail(e.target.value)\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (re.test(email)) {\n      setEmailError(\"nor right email\")\n    }\n    else if (e.target.value.length === 0) {\n      setEmailError(\"email is empty\")\n    } else {\n      setEmailError(\"\")\n    }\n  };\n\n  const passwordHandler = (e) => {\n    setPassword(e.target.value)\n    if (e.target.value.length < 8) {\n      setPasswordError(\"there password need to have more than 8 symbols\")\n\n    } else if (e.target.value.length === 0) {\n      setPasswordError(\"Password is empty\")\n\n    }\n    else {\n      setPasswordError(\"\")\n    }\n  };\n\n  const blurHandler = (e) => {\n    switch (e.target.name) {\n      case \"email\":\n        setEmailDirty(true)\n        break;\n      case \"password\":\n        setPasswordDirty(true)\n        break;\n    }\n  }\n  return (\n    <>\n      <div className=\"d-flex align-items-center auth px-0\">\n        <div className=\"row w-100 mx-0\">\n          <div className=\"col-lg-5 mx-auto\">\n            <div className=\"auth-form-light text-left py-5 px-4 px-sm-5\">\n              <h4>Hello! let's get started</h4>\n              <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n              <Form className=\"pt-3\">\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"email\"\n                    value={email}\n                    onChange={e => emailHandler(e)}\n                    onBlur={e => blurHandler(e)}\n                    placeholder=\"Email\"\n                    size=\"lg\" className=\"h-auto\"\n                  />\n                </Form.Group>\n                <Form.Group className=\"d-flex search-field\">\n                  <Form.Control\n                    type=\"password\"\n                    value={password}\n                    onChange={e => passwordHandler(e)}\n                    onBlur={e => blurHandler(e)}\n                    placeholder=\"Password\"\n                    size=\"lg\" className=\"h-auto\"\n                  />\n                </Form.Group>\n                <div className=\"mt-3\">\n                  <Link className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\" to=\"/dashboard\">SIGN IN</Link>\n                </div>\n                 \n                <div className=\"mt-5\">\n                  <button type=\"button\" className=\"btn btn-block btn-facebook auth-form-btn\">\n                    <i className=\"mdi mdi-facebook mr-2\"></i>Connect using facebook\n                  </button>\n                  <button type=\"button\" className=\"btn btn-block btn-google auth-form-btn\">\n                    <i className=\"mdi mdi-google mr-2\"></i>Connect using google\n                  </button>\n                </div>\n\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n// }\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}