{"ast":null,"code":"import _slicedToArray from \"/Users/adaada/Documents/Frontend/purple-react-free/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adaada/Documents/Frontend/purple-react-free/src/app/products/AddProduct.js\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap'; // import { Editor } from \"@tinymce/tinymce-react\";\n\nimport { Link } from 'react-router-dom';\n\nconst AddProduct = () => {\n  state = {\n    startDate: new Date()\n  };\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        emailDirty = _useState6[0],\n        setEmailDirty = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        passwordDirty = _useState8[0],\n        setPasswordDirty = _useState8[1];\n\n  const _useState9 = useState('Email is empty'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        emailError = _useState10[0],\n        setEmailError = _useState10[1];\n\n  const _useState11 = useState('Password is empty'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        passwordError = _useState12[0],\n        setPasswordError = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        formValid = _useState14[0],\n        setFormValid = _useState14[1];\n\n  useEffect(() => {\n    if (emailError || passwordError) {\n      setFormValid(false);\n      console.log(\"Form not validate. email: \" + email + \", password: \" + password);\n    } else {\n      setFormValid(true);\n      alert(\"you validate\");\n      console.log(\"form validate, email: \" + email + \", password: \" + password);\n    }\n  }, [emailError, passwordError]);\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (re.test(email)) {\n      setEmailError(\"nor right email\");\n    } else if (e.target.value.length === 0) {\n      setEmailError(\"email is empty\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n\n    if (e.target.value.length < 8) {\n      setPasswordError(\"there password need to have more than 8 symbols\");\n    } else if (e.target.value.length === 0) {\n      setPasswordError(\"Password is empty\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case \"email\":\n        setEmailDirty(true);\n        break;\n\n      case \"password\":\n        setPasswordDirty(true);\n        break;\n    }\n  }; // render() {\n\n\n  const categories_list = () => {\n    let categories = [];\n\n    for (let i = 0; i < 6; i++) {\n      categories.push(React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Category \", i + 1));\n    }\n\n    return categories;\n  };\n\n  const type_list = () => {\n    let types = [];\n\n    for (let i = 0; i < 6; i++) {\n      types.push(React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Type \", i + 1));\n    }\n\n    return types;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    class: \" card \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \" card-body row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"   \", React.createElement(Link, {\n    to: \"/all-product\",\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Products\"), \" / Add new product\"))), React.createElement(\"div\", {\n    className: \"card mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form-sample\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Product Name\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Category\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, categories_list())))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, type_list()))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    disabled: !formValid,\n    type: \"button\",\n    className: \"btn btn-gradient-primary btn-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Create Product\")))))));\n}; // }\n\n\nexport default AddProduct;","map":{"version":3,"sources":["/Users/adaada/Documents/Frontend/purple-react-free/src/app/products/AddProduct.js"],"names":["React","Component","Form","Link","AddProduct","state","startDate","Date","useState","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","useEffect","console","log","alert","emailHandler","e","target","value","re","test","length","passwordHandler","blurHandler","name","categories_list","categories","i","push","type_list","types"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n// import { Editor } from \"@tinymce/tinymce-react\";\nimport { Link } from 'react-router-dom';\n\n \nconst AddProduct = () => {\n    state = {\n        startDate: new Date()\n    };\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [emailDirty, setEmailDirty] = useState(false);\n    const [passwordDirty, setPasswordDirty] = useState(false);\n\n    const [emailError, setEmailError] = useState('Email is empty');\n    const [passwordError, setPasswordError] = useState('Password is empty');\n\n    const [formValid, setFormValid] = useState(false);\n\n\n    useEffect(() => {\n        if (emailError || passwordError) {\n            setFormValid(false);\n            console.log(\"Form not validate. email: \" + email + \", password: \" + password);\n\n        } else {\n            setFormValid(true);\n            alert(\"you validate\");\n            console.log(\"form validate, email: \" + email + \", password: \" + password);\n        }\n    }, [emailError, passwordError]);\n\n\n    const emailHandler = (e) => {\n        setEmail(e.target.value)\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n        if (re.test(email)) {\n            setEmailError(\"nor right email\")\n        }\n        else if (e.target.value.length === 0) {\n            setEmailError(\"email is empty\")\n        } else {\n            setEmailError(\"\")\n        }\n    };\n\n    const passwordHandler = (e) => {\n        setPassword(e.target.value)\n        if (e.target.value.length < 8) {\n            setPasswordError(\"there password need to have more than 8 symbols\")\n\n        } else if (e.target.value.length === 0) {\n            setPasswordError(\"Password is empty\")\n\n        }\n        else {\n            setPasswordError(\"\")\n        }\n    };\n\n    const blurHandler = (e) => {\n        switch (e.target.name) {\n            case \"email\":\n                setEmailDirty(true)\n                break;\n            case \"password\":\n                setPasswordDirty(true)\n                break;\n        }\n    }\n    // render() {\n        const categories_list = () => {\n            let categories = []\n            for (let i = 0; i < 6; i++) {\n                categories.push(\n                    <option>Category {i + 1}</option>\n                )\n            }\n            return categories;\n\n        }\n\n        const type_list = () => {\n            let types = []\n            for (let i = 0; i < 6; i++) {\n                types.push(\n                    <option>Type {i + 1}</option>\n                )\n            }\n            return types;\n\n        }\n\n        return (\n            <>\n                <div class=\" card \">\n                    <div class=\" card-body row\"> \n                            <p>   <Link to=\"/all-product\" class=\"text-muted\">Products</Link> / Add new product</p> \n                    </div>\n                </div>\n\n                <div className=\"card mt-3\">\n                    <div className=\"card-body\">\n                        <form className=\"form-sample\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"col-sm-3 col-form-label\">Product Name</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\"\n                                            />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"col-sm-3 col-form-label\">Price</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"number\" />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"col-sm-3 col-form-label\">Category</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\">\n                                                {categories_list()}\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"col-sm-3 col-form-label\">Type</label>\n                                        <div className=\"col-sm-9\">\n                                            <select className=\"form-control\">\n                                                {type_list()}\n                                            </select>\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Form.Group className=\"row\">\n                                        <label className=\"col-sm-3 col-form-label\">Amount</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control \n                                            type=\"number\" \n                                            />\n                                        </div>\n                                    </Form.Group>\n                                </div>\n                            </div>\n                            {/* <p className=\"mt-2\">Description</p>\n                            <Editor\n                                value={this.state.content}\n                                init={{\n                                    height: 400,\n                                    menubar: false,\n                                    branding: false \n                                }} \n                                onEditorChange={this.handleChange}\n                            /> */}\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <button disabled={!formValid}\n                                    type=\"button\" className=\"btn btn-gradient-primary btn-lg\">Create Product</button>\n                            </div>\n                        </div>\n                        </form>\n                    </div>\n                </div>\n\n            </>\n\n        )\n    }\n// }\n\nexport default AddProduct;"]},"metadata":{},"sourceType":"module"}