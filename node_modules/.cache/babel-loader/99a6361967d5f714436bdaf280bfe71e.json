{"ast":null,"code":"import _defineProperty from \"/Users/adaada/Documents/Frontend/purple-react-free/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/adaada/Documents/Frontend/purple-react-free/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adaada/Documents/Frontend/purple-react-free/src/app/rigths/AddUser.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\n\nconst AddUser = () => {\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    rePassword: \"\",\n    roleId: \"\"\n  };\n\n  const _useState = useState(initialValues),\n        _useState2 = _slicedToArray(_useState, 2),\n        formValues = _useState2[0],\n        setFormValues = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formErrors = _useState4[0],\n        setFormErrors = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isSubmit = _useState6[0],\n        setIsSubmit = _useState6[1]; // const [isReadyToRedirect, setIsReadyToRedirect] = useState(false);\n\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setFormValues(_objectSpread({}, formValues, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(formValues));\n    setIsSubmit(true);\n    alert(\"frm values: \" + formValues);\n  };\n\n  useEffect(() => {\n    console.log(formErrors);\n\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formValues);\n    }\n  }, [formErrors]);\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 4) {\n      errors.password = \"Password must be more than 4 characters\";\n    } else if (values.password.length > 10) {\n      errors.password = \"Password cannot exceed more than 10 characters\";\n    }\n\n    return errors;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    class: \" card \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \" card-body row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" \", React.createElement(Link, {\n    to: \"/rigth\",\n    class: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Manage Rights\"), \" / Add user \")))), React.createElement(\"div\", {\n    className: \"card mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-sample\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"email\",\n    value: formValues.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Role\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"roleId\",\n    value: formValues.roleId,\n    onChange: handleChange,\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Manager\"), React.createElement(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Administrator\")))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"password\",\n    value: formValues.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Repeat password\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"rePassword\",\n    value: formValues.rePassword,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-gradient-primary btn-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Create User\")))))));\n}; // }\n\n\nexport default AddUser;","map":{"version":3,"sources":["/Users/adaada/Documents/Frontend/purple-react-free/src/app/rigths/AddUser.js"],"names":["React","useState","useEffect","Link","Form","AddUser","initialValues","email","password","rePassword","roleId","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","target","name","value","handleSubmit","preventDefault","validate","alert","console","log","Object","keys","length","values","errors","regex","test"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\n\n\nconst AddUser = () => {\n    const initialValues = {\n        email: \"\",\n        password: \"\",\n        rePassword: \"\",\n        roleId: \"\"\n    };\n\n    const [formValues, setFormValues] = useState(initialValues);\n    const [formErrors, setFormErrors] = useState({});\n    const [isSubmit, setIsSubmit] = useState(false);\n    // const [isReadyToRedirect, setIsReadyToRedirect] = useState(false);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormValues({ ...formValues, [name]: value });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setFormErrors(validate(formValues));\n        setIsSubmit(true);\n\n        alert(\"frm values: \" + formValues);\n    };\n\n    useEffect(() => {\n        console.log(formErrors);\n        if (Object.keys(formErrors).length === 0 && isSubmit) {\n            console.log(formValues);\n        }\n    }, [formErrors]);\n\n    const validate = (values) => {\n        const errors = {};\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n        if (!values.email) {\n            errors.email = \"Email is required!\";\n        } else if (!regex.test(values.email)) {\n            errors.email = \"This is not a valid email format!\";\n        }\n        if (!values.password) {\n            errors.password = \"Password is required\";\n        } else if (values.password.length < 4) {\n            errors.password = \"Password must be more than 4 characters\";\n        } else if (values.password.length > 10) {\n            errors.password = \"Password cannot exceed more than 10 characters\";\n        }\n        return errors;\n    };\n\n    return (\n        <>\n            <div class=\" card \">\n                <div class=\" card-body row\">\n                    <div>\n                        <p> <Link to=\"/rigth\" class=\"text-muted\">Manage Rights</Link> / Add user </p>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"card mt-3\">\n                <div className=\"card-body\">\n\n                    <form\n                        onSubmit={handleSubmit}\n                        className=\"form-sample\"\n                    >\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Email</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"email\"\n                                            value={formValues.email}\n                                            onChange={handleChange}\n                                        />\n                                    </div>\n                                </Form.Group>\n                            </div>\n\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Role</label>\n                                    <div className=\"col-sm-9\">\n                                        <select\n                                        name=\"roleId\"\n                                            value={formValues.roleId}\n                                            onChange={handleChange}\n                                            className=\"form-control\"\n                                        >\n                                            <option value=\"0\">Manager</option>\n                                            <option value=\"1\">Administrator</option>\n\n                                        </select>\n                                    </div>\n                                </Form.Group>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Password</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"password\"\n                                            value={formValues.password}\n                                            onChange={handleChange}\n                                        />\n                                    </div>\n                                </Form.Group>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">Repeat password</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control\n                                            type=\"text\"\n                                            name=\"rePassword\"\n                                            value={formValues.rePassword}\n                                            onChange={handleChange}\n                                        />\n                                    </div>\n                                </Form.Group>\n                            </div>\n                        </div>\n                        {/* \n                        <div className=\"row my-3\">\n                            <div className=\"col-md-6\">\n                                <div class=\"form-group\">\n                                    <div class=\"form-check\">\n                                        <label class=\"form-check-label\">\n                                            <input type=\"radio\" name=\"right\" class=\"form-check-input\" />\n                                            <i class=\"input-helper\"></i>Manager rights (product: read/add/edit/remove) (order: read)\n                                        </label>\n                                    </div>\n                                    <div class=\"form-check\">\n                                        <label class=\"form-check-label\">\n                                            <input type=\"radio\" name=\"right\" class=\"form-check-input\" />\n                                            <i class=\"input-helper\"></i>Admin rights (user: read/edit)\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div> */}\n\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <button\n                                    type=\"button\" className=\"btn btn-gradient-primary btn-lg\">Create User</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n        </>\n    );\n}\n// }\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}